ERROR: error when checking stack right_canary

stack[0064FED0] "stk" called from stack.cpp(105) stack_push
{
	stack->left_canary = deadbeef
	position = 1
	size = 5
	data[00681554]
	{
		data->left_canary = 75e34660deadbeef
		*[0] = 0
		*[1] = 0
		*[2] = 0
		*[3] = 0
		*[4] = 0
		data->right_canary = deadbeef
	}
	stack->hash_struct = 133317460
	stack->hash_data = 5381
	stack->right_canary = 1deadbeef
}

-----------------------------------------------------------
ERROR: hash->data does not match true value.

stack[0064FEC8] "stk" called from stack.cpp(129) stack_pop
{
	stack->left_canary = deadbeef
	position = 6
	size = 10
	data[00761554]
	{
		data->left_canary = 75e34660deadbeef
		*[0] = 1
		*[1] = 3
		*[2] = 3
		*[3] = 3
		*[4] = 5
		*[5] = 6
		*[6] = 0
		*[7] = 0
		*[8] = 0
		*[9] = 0
		data->right_canary = deadbeef
	}
	stack->hash_struct = 6084
	stack->hash_data = 32342
	stack->right_canary = deadbeef
}

-----------------------------------------------------------
ERROR: hash->data does not match true value.

stack[0064FEC8] "stk" called from stack.cpp(129) stack_pop
{
	stack->left_canary = deadbeef
	position = 6
	size = 10
	data[00BF1554]
	{
		data->left_canary = 75e34660deadbeef
		*[0] = 1
		*[1] = 3
		*[2] = 3
		*[3] = 3
		*[4] = 5
		*[5] = 6
		*[6] = 0
		*[7] = 0
		*[8] = 0
		*[9] = 0
		data->right_canary = deadbeef
	}
	stack->hash_struct = 6084
	stack->hash_data = 32342
	stack->right_canary = deadbeef
}

-----------------------------------------------------------
ERROR: hash->data does not match true value.

stack[0064FEC8] "stk" called from stack.cpp(129) stack_pop
{
	stack->left_canary = deadbeef
	position = 6
	size = 10
	data[006A1554]
	{
		data->left_canary = 75e34660deadbeef
		*[0] = 1
		*[1] = 3
		*[2] = 3
		*[3] = 3
		*[4] = 5
		*[5] = 6
		*[6] = 0
		*[7] = 0
		*[8] = 0
		*[9] = 0
		data->right_canary = deadbeef
	}
	stack->hash_struct = 6084
	stack->hash_data = 32342
	stack->right_canary = deadbeef
}

-----------------------------------------------------------
